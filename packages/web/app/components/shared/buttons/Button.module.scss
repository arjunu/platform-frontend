.button {
  @include font-medium-roboto;

  @include media-breakpoint-up(sm) {
    // TODO: Remove simple and inline button here
    min-width: px-to-rem(140px);
  }

  color: $neu-charcoal-grey;

  // TODO: Move to variable
  font-weight: 500;

  // TODO: Make it a generic
  border-radius: 4px;

  flex-shrink: 0;
  padding: px-to-rem(8px) px-to-rem(20px);
  text-transform: capitalize;

  transition: background-color 200ms ease-out, box-shadow 200ms ease-out, color 200ms ease-out;

  &:disabled {
    color: $neu-gull-gray;
  }

  // Layout types (eg. primary, secondary)
  // @note If we need to add new button design please add it as a separate layout type
  //       even if it's small change to the existing one that can be done through prop (e.g theme prop)

  &-primary {
    $hover-box-shadow: rgba(20, 36, 49, .2);

    background: $neu-neon-yellow;

    &:hover,
    &:focus {
      box-shadow: 0 5px 10px 0 $hover-box-shadow;
    }

    &:active,
    &.is-active {
      background: $neu-bitter-lemon;
    }

    &:disabled {
      background: $neu-light-blue-grey-two;
    }
  }

  &-outline {
    border: px-to-rem(1px) solid $neu-light-blue-grey-two;

    &:hover,
    &:focus {
      border-color: $neu-bitter-lemon;
    }

    &:active,
    &.is-active {
      background: $neu-bitter-lemon;
      border-color: $neu-bitter-lemon;
    }

    &:disabled {
      background-color: $neu-light-blue-grey-two;
      border-color: $neu-light-blue-grey-two;
    }
  }

  &-secondary {
    border: px-to-rem(1px) solid $neu-very-light-blue;
    background: $neu-very-light-blue;

    &:hover,
    &:focus {
      background: transparent;
      border-color: $neu-bitter-lemon;
    }

    &:active,
    &.is-active {
      border-color: $neu-bitter-lemon;
      background: $neu-bitter-lemon;
    }

    &:disabled {
      background: $neu-light-blue-grey-two;
    }
  }

  &-ghost {
    &:hover,
    &:focus {
      background: $neu-very-light-blue;
    }

    &:active,
    &.is-active {
      background: transparent;
      color: $neu-bitter-lemon;
    }
  }

  &-inline {
    padding: 0;
    margin-top: 0;
    justify-content: initial;
    text-decoration: underline;

    &:hover,
    &.is-active,
    &:focus {
      text-decoration: none;
    }
  }

  // widths
  &:global(.block) {
    width: 100%;
  }

  &:global(.no-padding) {
    padding: 0;
  }

  // sizes
  &-small {
    @include font-small-roboto;

    text-transform: uppercase;
    padding: px-to-rem(3px) px-to-rem(8px);
  }

  &-huge {
    @include font-large-roboto;

    min-width: px-to-rem(216px);
    padding: px-to-rem(12px) px-to-rem(60px);
  }

  // themes
  &-green {
    color: $neu-seaweed;
  }

  // elements
  &:global {
    &.icon-before {
      :global(.inline-icon) {
        margin-right: 10px;
      }
    }

    &.icon-after {
      :global(.inline-icon) {
        margin-left: 10px;
      }
    }
  }

  :global(.inline-icon) {
    color: currentColor;
    height: px-to-rem(20px);
    width: px-to-rem(20px);
  }
}
